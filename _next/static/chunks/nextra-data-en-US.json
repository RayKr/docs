{"/_app":{"title":" App","data":{"":""}},"/_app":{"title":" App","data":{"":""}},"/development/frontend":{"title":"前端开发指南","data":{"":"为什么要写这一节？我希望不再是只有 Kami 一个风格，能有更多主题可供选择。\n此系统采用了前后端分离的形式，并没有提供模板渲染的选择，所以前端项目可以使用任何框架和架构设计。但是虽然开发比较自由，但是也存在诸多不便，比如接口调用和数据定义，路由约定上。所以在这一节，具体讲讲如何开发前端项目。","路由约定#路由约定":"Kami 是由 NextJS、React 开发的，作为最最原始的项目，至今（截止 2021.12）已有近两年的历史，经过这些时间的沉淀，我希望前端项目路由的组织上能够遵守这一个约定。\n路由的约定能很大程度保证网站因更换不同前端主题导致 SEO 异常，死链接等问题。\n约定如下：\nPath\tDescrition\tMark\t/\t主页\t强制要求\t/posts\t博文列表\t强制要求\t/posts/:category/:slug\t博文详情页\t强制要求\t/pages/:slug\t独立页面详情页\t强制要求\t/notes/:nid\t日记详情页\t强制要求\t/feed\tRSS 订阅\t强制要求\t/:category/:slug\t302 -> /posts/:category/:slug\t建议\t/category/:slug\t分类中文章列表页\t建议\t/notes\t日记列表或者跳转最新日记页\t建议\t/notes/latest\t最新日记详情页\t建议\t/friends\t友链\t建议\t/says\t一言详情页\t可选\t/sitemap\t站点地图\t建议\t/timeline\t时间线\t可选\t/recently\t动态页\t可选\t/favorite/:type\t附加页\t可选\t/projects\t项目页\t可选\t/projects/:id\t项目详情页\t可选","框架上的选择与建议#框架上的选择与建议":"建议选择附带 SSR 功能的现代化框架：\nReact：NextJS, RakkasJS, umi\nVue: Vite (vite-ssr), NuxtJS\n\n小程序：\nReact: Remax, taro\nVue: uni-app","接口调用与-sdk-的使用#接口调用与 SDK 的使用":"考虑到单独编写接口定义和返回类型太麻烦，这里提供一个 SDK 方便开发。\nSDK 仍在 beta 阶段，未来接口可能出现变化。\n详见：api-client"}},"/development":{"title":"开发指南","data":{"":"为了方便开发者快速上手，我们提供了一些开发指南，帮助开发者快速了解和使用我们的产品。","项目技术栈#项目技术栈":"React\nNestJS\nTypeScript\nMongoDB\nRedis\nDocker\n\n你可以点击上面的链接了解更多有关这些技术的信息。","启动开发环境#启动开发环境":"此系统采用了前后端分离的形式，因此需要分别启动前端和后端的开发环境。但是由于不同的前端不同写法，我们认为作为一名开发者都应该知道如何 「举一反三」， 并且不同的前端可能步骤会 大相径庭 ，因此我们不会提供如何启动前端开发环境的指南。\n有关前端开发设计指南，你可以在侧边栏中找到。\n你需要确定好你的开发环境中已经安装了以下工具：\nNode.js (>= 16)\nPNPM\nMongoDB\nRedis\nGit","启动后端#启动后端":"首先，你需要克隆本仓库到你的本地（你可能需要 fork 一份到你的仓库中，并且使用 --depth=1 来加速克隆）：\n\n然后，你需要安装依赖，我们使用了 PNPM 作为包管理器，并不建议你使用其他的管理器安装。\n在您提交相关 PR 时，我们也会检查您是否使用了 PNPM，如果没有，我们将会拒绝您的 PR（一个项目多个 lock 总不是一个好的选择）。\n\n\n接下来，我们就可以开始启动后端的开发环境了。"}},"/":{"title":"Mix Space - An Alternative Personal Space.","data":{"":"An Alternative Personal Space.\n\n一个替代个人空间的新方式\n\n\n5 分钟拥有自己的 Mix Space →\n\n\n\n\n\n\n\n\n\n\n\n\n\n几分钟内创建强大的现代博客网站。\n\n\n\n\n部署一行完成.\n\nMix Space 有多种部署方式，您可以选择最适合您的方式来部署您的 Mix Space。采用 Docker 部署，您可以在几分钟内部署您的博客，而不需要任何专业知识。使用预设脚本部署亦是如此。\n\n\n\n\n\n\n\n\n\n/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n全平台黑暗模式\n\n\n\n\nMarkdown + 自定义语法, 丰富您的内容。\n\nMix Space 支持自定义 Markdown 内语法，您可以使用自定义语法来丰富您的内容。\n\n\n\n\n\n\n\n\n\n\n无限扩展、无限可能，实现歌单解析，追番列表等功能。\n\n\n\n数据统计面板\n\nMix Space 支持访客统计，您可以在后台查看您的 网站访问量，访问来源，访问设备等信息。\n\n\n\n记录生活点滴\n\nMix Space 不仅是博客，更是记录生活点滴的个人空间。您可以在 Mix Space 分享您的多彩缤纷的生活。\n\n\n\n强大的友链系统，促进你与老友的联系。\n\nMix Space 的友链系统强大且全面，在后台你可以检测你的老友是否还「健在」 有了 Mix Space，你的友链一切尽在掌握。\n\n\n\n更多特性...\n\n文件管理 / WebSocket / 友链支持 / 计划任务 / 数据迁移... 更多新特性等待您的探索。\n\n拥有你自己的 Mix Space →"}},"/themes/kami":{"title":"Kami 主题","data":{"":"下一个代替项目将会是 Shiro，当它完成之时，我便不再投入任何精力到 Kami 中。迎接未来总需要舍弃一些东西，非常感谢大家三年来使用 Kami，不管你是谁，都需要对你说声谢谢。—— Innei\n由于 Kami 主题将不再维护，此文档将不再更新，但是你仍然可以使用它。","克隆项目#克隆项目":"","安装依赖#安装依赖":"","配置-env#配置 ENV":"复制 .env.example 为 .env\n编辑 .env 文件，它看起来应该是这个样子的","开始构建#开始构建":"","启动前端#启动前端":""}},"/themes/shiro":{"title":"Shiro 主题","data":{"":"","demo#Demo":"","前提要求#前提要求":"你已安装 Mix Space 后端并且已启动\n你已注册 Vercel 和 GitHub 账号\n你已注册 Clerk 账号","安装#安装":"","克隆仓库#克隆仓库":"登陆 GitHub 账号，打开 Innei/Shiro，点击右上角的 Fork 按钮，将仓库克隆到你的账号下。","打开-vercel-创建项目#打开 Vercel 创建项目":"登陆 Vercel 账号，点击右上角的 New Project 按钮，选择 Import Git Repository，选择你刚刚 Fork 的仓库，点击 Import 按钮，即可进入到项目配置页面。","打开-clerk-创建项目#打开 Clerk 创建项目":"打开 Clerk 仪表盘 点击 Add application 按钮，填入你的博客名称，并配置信息，点击 Create application 按钮，即可完成配置。\n请你务必记住你的 Clerk 页面的公钥和私钥，稍后将会用到。","配置环境变量#配置环境变量":"在下方的配置表格中，填入你的环境变量，然后点击复制按钮，将环境变量复制到剪贴板中。","键入环境变量--开始部署#键入环境变量 & 开始部署":"在刚刚进入的 Vercel 项目配置页面中，点击 Environment Variables，然后键盘上的 Ctrl + V 将环境变量粘贴到输入框中，然后点击 Deploy 按钮，等待部署完成。","配置-vercel-storage#配置 Vercel Storage":"进入 Vercel 项目仪表盘，在上方菜单栏找到 Storage，点击 Connect Storage 按钮，选择 Edge Config，填入配置：\n请注意，这份配置你需要自行修改成符合你的需求的配置。直接使用下面的配置可能会导致你的博客无法按照你的预期运行。\n\n\n点击 Save Item 按钮保存配置，然后回到仪表盘点击重新部署，等待部署完成。","完成#完成！":"至此，你已完成了 Shiro 主题的部署，你可以访问你的博客了。有关配置域名的教程，请参考 Vercel 文档。"}},"/themes":{"title":"前端主题","data":{"":""}},"/themes/yun":{"title":"Yun 主题","data":{"":"由于 Yun 主题将不再维护，此文档将不再更新，但是你仍然可以使用它。","克隆项目#克隆项目":"","安装依赖#安装依赖":"","配置服务#配置服务":"如果你部署 Mix Space 后端与部署 Yun 前端在同一台服务器，并且后端监听的端口为 2333，那么你可以跳过这一步。\n\n前往 ./server/constant.ts\n\n\n\n修改为你的后端 API 地址。","开始构建#开始构建":"","启动前端#启动前端":""}}}