{"/_app":{"title":" App","data":{"":""}},"/development/frontend":{"title":"前端开发指南","data":{"":"为什么要写这一节？我希望不再是只有 Kami 一个风格，能有更多主题可供选择。\n此系统采用了前后端分离的形式，并没有提供模板渲染的选择，所以前端项目可以使用任何框架和架构设计。但是虽然开发比较自由，但是也存在诸多不便，比如接口调用和数据定义，路由约定上。所以在这一节，具体讲讲如何开发前端项目。","路由约定#路由约定":"Kami 是由 NextJS、React 开发的，作为最最原始的项目，至今（截止 2021.12）已有近两年的历史，经过这些时间的沉淀，我希望前端项目路由的组织上能够遵守这一个约定。\n路由的约定能很大程度保证网站因更换不同前端主题导致 SEO 异常，死链接等问题。\n约定如下：\nPath\tDescrition\tMark\t/\t主页\t强制要求\t/posts\t博文列表\t强制要求\t/posts/:category/:slug\t博文详情页\t强制要求\t/pages/:slug\t独立页面详情页\t强制要求\t/notes/:nid\t日记详情页\t强制要求\t/feed\tRSS 订阅\t强制要求\t/:category/:slug\t302 -> /posts/:category/:slug\t建议\t/category/:slug\t分类中文章列表页\t建议\t/notes\t日记列表或者跳转最新日记页\t建议\t/notes/latest\t最新日记详情页\t建议\t/friends\t友链\t建议\t/says\t一言详情页\t可选\t/sitemap\t站点地图\t建议\t/timeline\t时间线\t可选\t/recently\t动态页\t可选\t/favorite/:type\t附加页\t可选\t/projects\t项目页\t可选\t/projects/:id\t项目详情页\t可选","框架上的选择与建议#框架上的选择与建议":"建议选择附带 SSR 功能的现代化框架：\nReact：NextJS, RakkasJS, umi\nVue: Vite (vite-ssr), NuxtJS\n\n小程序：\nReact: Remax, taro\nVue: uni-app","接口调用与-sdk-的使用#接口调用与 SDK 的使用":"考虑到单独编写接口定义和返回类型太麻烦，这里提供一个 SDK 方便开发。\nSDK 仍在 beta 阶段，未来接口可能出现变化。\n详见：api-client"}},"/development":{"title":"开发指南","data":{"":"为了方便开发者快速上手，我们提供了一些开发指南，帮助开发者快速了解和使用我们的产品。","项目技术栈#项目技术栈":"React\nNestJS\nTypeScript\nMongoDB\nRedis\nDocker\n\n你可以点击上面的链接了解更多有关这些技术的信息。","启动开发环境#启动开发环境":"此系统采用了前后端分离的形式，因此需要分别启动前端和后端的开发环境。但是由于不同的前端不同写法，我们认为作为一名开发者都应该知道如何 「举一反三」， 并且不同的前端可能步骤会 大相径庭 ，因此我们不会提供如何启动前端开发环境的指南。\n有关前端开发设计指南，你可以在侧边栏中找到。\n你需要确定好你的开发环境中已经安装了以下工具：\nNode.js (>= 16)\nPNPM\nMongoDB\nRedis\nGit","启动后端#启动后端":"首先，你需要克隆本仓库到你的本地（你可能需要 fork 一份到你的仓库中，并且使用 --depth=1 来加速克隆）：\n\n然后，你需要安装依赖，我们使用了 PNPM 作为包管理器，并不建议你使用其他的管理器安装。\n在您提交相关 PR 时，我们也会检查您是否使用了 PNPM，如果没有，我们将会拒绝您的 PR（一个项目多个 lock 总不是一个好的选择）。\n\n\n接下来，我们就可以开始启动后端的开发环境了。"}},"/docs/docker":{"title":"Docker 部署","data":{"":"","安装-docker#安装 Docker":"如果你的服务器在国内，建议使用阿里云的镜像加速器，安装命令如下：\n\n在国外，可以直接使用官方脚本安装：","拉取配置文件#拉取配置文件":"","配置-core-启动配置文件#配置 Core 启动配置文件":"在下方的表格里填入你的配置，然后点击复制，创建一个 .env 文件，将复制的内容粘贴进去，保存即可。\n鼠标悬停在下方的表格中，可以查看对应的配置项名字。\n\n\n\nJWT 密钥：需要填写长度不小于 16 个字符，不大于 32 个字符的字符串，用于加密用户的 JWT，务必保存好自己的密钥，不要泄露给他人。\n被允许的域名：需要填写被允许的域名，通常是前端的域名，如果允许多个域名访问，用英文逗号，分隔。\n是否开启加密：如果你确定要开启加密，将 false 改为 true，开启加密后，你需要在下方填写加密密钥。\n加密密钥：具体内容可参考 https://mx-space.js.org/feature/security.html\n\n\n若开启加密，则需注意密钥长度必须为 64 位，不然会在初始化时报错。注意这是不可逆的，务必保存自己的秘钥。所以并不是非常推荐使用，除非你真的需要加密，","启动-core#启动 Core":"","完成#完成":"恭喜你完成了 Core 部署，不过仅仅如此是不够的，你需要对 Core 进行初始化等等，尽情探索吧！"}},"/docs/features":{"title":"主要功能","data":{"":"","mix-space--markdown--html#Mix Space + Markdown > HTML":"Mix Space 的 Markdown 除了支持标准的 Markdown 语法和 GFM 外，还支持「文本宏」，它可以让你在文章中使用动态数据，比如：\n\n在经过 Mix Space 处理后，会被替换成：\n\n这种简易的以 [[ 开头， ]] 结尾的语法，非常便于使用。你甚至可以使用任意 JS 代码去执行一个函数，也可以是一个 JS 语句。了解更多有关文本宏的信息 功能 - 文本宏","日记#日记":"作为个人空间，日记是必不可少的功能。Mix Space 的日记功能非常强大，它支持：\n标记「回顾日记」，并自动将其归档到「回顾日记」页面\n私人日记密码保护，只有知道密码的人才能查看\n定时发布，可以将日记定时发布到未来的某个时间点","评论#评论":"评论是一个网站的重要组成部分，Mix Space 的评论功能非常强大，它支持：\n反垃圾评论，使用 Mix Space 的反垃圾评论系统配合多种自定义规则，可以有效的防止垃圾评论\n邮件通知，当有人评论时，会发送邮件通知给文章作者","文件管理#文件管理":"你可以使用 Mix Space 上传文件，然后在任意地方中使用，比如文章中，或者是日记中。你可以使用 Markdown 语法插入图片，也可以使用 HTML 语法插入图片。","通知#通知":"Mix Space 支持多种通知方式，让你不错过任何一条重要的通知。\n邮件通知，当有人评论时，会发送邮件通知给文章作者\nBark 通知支持","友链#友链":"Mix Space 的友链系统支持自助申请，你可以在后台设置是否需要审核，如果需要审核，你可以在后台设置通过 OR 拒绝理由。并且在后台可以看到友链的可用性检查结果。","计划任务#计划任务":"Mix Space 有着强大的计划任务功能，它们都被统一管理，你可以在后台执行计划任务：\n备份数据库\n清除缓存、访问记录、临时文件\n推送百度搜索\n推送 Algolia 搜索\n删除过期的数据\netc...","其他#其他":"Mix Space 还有很多其他功能，比如：\n动态化配置前端，你可以在后台设置前端的配置，比如网站名称，网站描述，网站图标等等\n终端功能，你可以在后台进入终端，执行一些命令，比如清除缓存，备份数据等等\n云函数，你可以在后台设置云函数，让你的网站更加强大\nAlgolia Search，你可以在后台设置 Algolia Search，让你的网站支持强大的搜索功能\n项目展示功能，你可以向访客展示你的项目，展现你的技术能力\n迁移，Mix Space 支持从 Markdown 导入文章，也支持导出文章为 Markdown。"}},"/docs":{"title":"引言","data":{"":"Mix Space 是一个一款简洁而不简单的个人博客系统，它够快，够现代。你可以利用它构建一个属于自己的个人空间，记录生活，分享知识。在本章节，我们教你完成的是 后端 的安装，而 前端 的安装则需要你阅读 前端主题文档。\n为什么分开部署？请查看本页 一些你需要清楚知道的事情 小节。","快速开始#快速开始":"如果你对 Docker, Docker Compose, NodeJS, npm-script, git 等技术不熟悉，建议先学习相关知识。文档中不会对这些技术进行详细介绍，且若由于不熟悉这些技术导致的问题，我们将不会提供技术支持。如果你不是开发者，或者不想折腾，请不要选择进阶部署，因为它需要你具备一定的开发能力。\n\n\n\n\n\n\n\n\n还有更多部署方式吗？欢迎您向文档提交 Pull Request 以分享您的部署方式。按上方后端部署文档完成你的部署后，你可以通过以下方式来继续部署 Mix Space 前端： （为什么分开部署？请查看 一些你需要清楚知道的事情）","一些你需要清楚知道的事情#一些你需要清楚知道的事情":"","遇到报错怎么办#遇到报错怎么办？":"新时代新风气，我们遇到了一个人工智能蓬勃发展的时代，所以在你遇到了问题的时候请先询问 Bing AI, ChatGPT 等人工智能，它们会帮助你解决大部分问题。如果你遇到了一些人工智能解决不了的问题，那么请再次阅读文档，如果文档依旧没有解决你的问题，那么请在对应仓库的 GitHub Issues 中提出你的问题，我们会尽快解决。","mix-space-的组成结构#Mix Space 的组成结构":"所以，Mix Space 由两部分组成：后端 和 前端。如果你没法理解的话，建议询问 Bing AI, ChatGPT 等人工智能以此来了解它们、以及知道它们的区别。（比如这样询问 ChatGPT）总之你需要知道的便是：这不是像 Typecho、WordPress 这样的「一步曲」就搞定的系统，而是需要 「两步曲」 才能完成安装。\n但万幸的是，我们开发者已经为你准备好了一切，你只需要按照文档推荐的步骤来操作即可，即使你不是开发者，也可以轻松完成安装。\n知道了这些，你就可以避免掉大部分的问题了，开始安装体验吧！"}},"/docs/scripts":{"title":"预设脚本部署","data":{"":"经用户反馈，我们发现预设脚本部署的方式存在一些问题，因此我们建议您使用其他部署方式。"}},"/":{"title":"Mix Space - An Alternative Personal Space.","data":{"":"An Alternative Personal Space.\n\n一个替代个人空间的新方式\n\n\n5 分钟拥有自己的 Mix Space →\n\n\n\n\n\n\n\n\n\n\n\n\n\n几分钟内创建强大的现代博客网站。\n\n\n\n\n部署一行完成.\n\nMix Space 有多种部署方式，您可以选择最适合您的方式来部署您的 Mix Space。采用 Docker 部署，您可以在几分钟内部署您的博客，而不需要任何专业知识。使用预设脚本部署亦是如此。\n\n\n\n\n\n\n\n\n\n/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n全平台黑暗模式\n\n\n\n\nMarkdown + 自定义语法, 丰富您的内容。\n\nMix Space 支持自定义 Markdown 内语法，您可以使用自定义语法来丰富您的内容。\n\n\n\n\n\n\n\n\n\n\n无限扩展、无限可能，实现歌单解析，追番列表等功能。\n\n\n\n数据统计面板\n\nMix Space 支持访客统计，您可以在后台查看您的 网站访问量，访问来源，访问设备等信息。\n\n\n\n记录生活点滴\n\nMix Space 不仅是博客，更是记录生活点滴的个人空间。您可以在 Mix Space 分享您的多彩缤纷的生活。\n\n\n\n强大的友链系统，促进你与老友的联系。\n\nMix Space 的友链系统强大且全面，在后台你可以检测你的老友是否还「健在」 有了 Mix Space，你的友链一切尽在掌握。\n\n\n\n更多特性...\n\n文件管理 / WebSocket / 友链支持 / 计划任务 / 数据迁移... 更多新特性等待您的探索。\n\n拥有你自己的 Mix Space →"}},"/themes/kami":{"title":"Kami 主题","data":{"":"下一个代替项目将会是 Shiro，当它完成之时，我便不再投入任何精力到 Kami 中。迎接未来总需要舍弃一些东西，非常感谢大家三年来使用 Kami，不管你是谁，都需要对你说声谢谢。—— Innei\n由于 Kami 主题将不再维护，此文档将不再更新，但是你仍然可以使用它。","克隆项目#克隆项目":"","安装依赖#安装依赖":"","配置-env#配置 ENV":"复制 .env.example 为 .env\n编辑 .env 文件，它看起来应该是这个样子的","开始构建#开始构建":"","启动前端#启动前端":""}},"/themes/shiro":{"title":"Shiro 主题","data":{"":"","demo#Demo":"","前提要求#前提要求":"你已安装 Mix Space 后端并且已启动\n你已注册 Vercel 和 GitHub 账号\n你已注册 Clerk 账号","安装#安装":"","克隆仓库#克隆仓库":"登陆 GitHub 账号，打开 Innei/Shiro，点击右上角的 Fork 按钮，将仓库克隆到你的账号下。","打开-vercel-创建项目#打开 Vercel 创建项目":"登陆 Vercel 账号，点击右上角的 New Project 按钮，选择 Import Git Repository，选择你刚刚 Fork 的仓库，点击 Import 按钮，即可进入到项目配置页面。","打开-clerk-创建项目#打开 Clerk 创建项目":"打开 Clerk 仪表盘 点击 Add application 按钮，填入你的博客名称，并配置信息，点击 Create application 按钮，即可完成配置。\n请你务必记住你的 Clerk 页面的公钥和私钥，稍后将会用到。","配置环境变量#配置环境变量":"在下方的配置表格中，填入你的环境变量，然后点击复制按钮，将环境变量复制到剪贴板中。","键入环境变量--开始部署#键入环境变量 & 开始部署":"在刚刚进入的 Vercel 项目配置页面中，点击 Environment Variables，然后键盘上的 Ctrl + V 将环境变量粘贴到输入框中，然后点击 Deploy 按钮，等待部署完成。","配置-vercel-storage#配置 Vercel Storage":"进入 Vercel 项目仪表盘，在上方菜单栏找到 Storage，点击 Connect Storage 按钮，选择 Edge Config，填入配置：\n请注意，这份配置你需要自行修改成符合你的需求的配置。直接使用下面的配置可能会导致你的博客无法按照你的预期运行。\n\n\n点击 Save Item 按钮保存配置，然后回到仪表盘点击重新部署，等待部署完成。","完成#完成！":"至此，你已完成了 Shiro 主题的部署，你可以访问你的博客了。有关配置域名的教程，请参考 Vercel 文档。"}},"/docs/advanced":{"title":"进阶部署","data":{"":"在您进行进阶部署前，我们给予最后的警告：如果你不是开发者，或者不想折腾，请不要选择进阶部署，因为它需要你具备一定的开发能力。由于自身技术原因导致的问题，我们将不会提供任何技术支持。情节严重者，我们将永久拉黑您的账号。","要求#要求":"已安装 Node.js 16.0.0 或以上版本\n已安装 Git, PNPM, PM2\n已安装 MongoDB, Redis 并正常运行","1-克隆并安装#1. 克隆并安装":"","2-构建--bundle#2. 构建 & Bundle":"","3-配置-ecosystemconfigjs#3. 配置 ecosystem.config.js":"","4-启动#4. 启动":"进入 ./apps/core/out，创建一个 ecosystem.config.js 文件\n将上方复制的内容黏贴进去，然后执行以下命令启动服务","5-反向代理-or-#5. 反向代理 or ...":"剩下的就是你的事了，你可以使用 Nginx 或者 Caddy 等反向代理工具，也可以使用 Cloudflare 等 CDN 服务。本文不再赘述。"}},"/themes":{"title":"前端主题","data":{"":""}},"/themes/yun":{"title":"Yun 主题","data":{"":"由于 Yun 主题将不再维护，此文档将不再更新，但是你仍然可以使用它。","克隆项目#克隆项目":"","安装依赖#安装依赖":"","配置服务#配置服务":"如果你部署 Mix Space 后端与部署 Yun 前端在同一台服务器，并且后端监听的端口为 2333，那么你可以跳过这一步。\n\n前往 ./server/constant.ts\n\n\n\n修改为你的后端 API 地址。","开始构建#开始构建":"","启动前端#启动前端":""}},"/_app":{"title":" App","data":{"":""}}}